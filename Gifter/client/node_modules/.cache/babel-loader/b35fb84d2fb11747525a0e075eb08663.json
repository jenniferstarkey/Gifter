{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\stark\\\\workspace\\\\Gifter\\\\Gifter\\\\client\\\\src\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from 'bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport { Form, FormGroup, Label, Input, Card } from 'reactstrap';\n\nconst PostForm = () => {\n  _s();\n\n  const [event, setEvent] = useState([]);\n  const [userProfileId, setUserProfileId] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [caption, setCaption] = useState(\"\");\n\n  const NewPost = post => {\n    return fetch('/api/post', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(post)\n    }).then(res => res.json());\n  };\n\n  const submitPost = event => {\n    const post = {\n      title,\n      imageUrl,\n      caption,\n      userProfileId\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"userId\",\n              children: \"User Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"userId\",\n              onChange: e => setUserProfileId(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"title\",\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"imageUrl\",\n              children: \"URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"imageUrl\",\n              onChange: e => setImageUrl(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"caption\",\n              children: \"Caption\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"caption\",\n              onChange: e => setCaption(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: submitPost,\n          children: \"Create New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostForm, \"XAC6P4iJ+jzKWiPY77v9BWgaNYE=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/stark/workspace/Gifter/Gifter/client/src/components/PostForm.js"],"names":["Button","React","useEffect","useState","Form","FormGroup","Label","Input","Card","PostForm","event","setEvent","userProfileId","setUserProfileId","title","setTitle","imageUrl","setImageUrl","caption","setCaption","NewPost","post","fetch","method","headers","body","JSON","stringify","then","res","json","submitPost","e","target","value"],"mappings":"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","sourcesContent":["import { Button } from 'bootstrap';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Form, FormGroup, Label, Input, Card } from 'reactstrap';\r\n\r\nconst PostForm = () => {\r\n    const [event, setEvent] = useState([]);\r\n    const [userProfileId, setUserProfileId] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [caption, setCaption] = useState(\"\");\r\n\r\n    const NewPost = (post) => {\r\n        return fetch('/api/post', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(post)\r\n        })\r\n            .then(res => res.json());\r\n    }\r\n\r\n    const submitPost = (event) => {\r\n        const post = {\r\n            title, imageUrl, caption, userProfileId,\r\n        };\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <Card>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"userId\">User Id</Label>\r\n                            <Input id=\"userId\" onChange={(e) => setUserProfileId(e.target.value)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"title\">Title</Label>\r\n                            <Input id=\"title\" onChange={(e) => setTitle(e.target.value)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"imageUrl\">URL</Label>\r\n                            <Input id=\"imageUrl\" onChange={(e) => setImageUrl(e.target.value)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"caption\">Caption</Label>\r\n                            <Input id=\"caption\" onChange={(e) => setCaption(e.target.value)} />\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button onClick={submitPost}>Create New Post</Button>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}