[{"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\index.js":"1","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\reportWebVitals.js":"2","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\App.js":"3","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostList.js":"4","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\Post.js":"5","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostForm.js":"6"},{"size":517,"mtime":1610558549572,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1610558549574,"results":"9","hashOfConfig":"8"},{"size":304,"mtime":1610558549564,"results":"10","hashOfConfig":"8"},{"size":688,"mtime":1610558549569,"results":"11","hashOfConfig":"8"},{"size":544,"mtime":1610558549567,"results":"12","hashOfConfig":"8"},{"size":2143,"mtime":1610558549568,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ablpqo",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\index.js",[],"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\reportWebVitals.js",[],["28","29"],"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\App.js",[],"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostList.js",[],"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\Post.js",[],"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostForm.js",["30","31","32","33","34"],"import React, { useEffect, useState } from 'react';\r\nimport { Form, FormGroup, Label, Input, Card, Button } from 'reactstrap';\r\n\r\nconst PostForm = () => {\r\n    const [event, setEvent] = useState([]);\r\n    const [userProfileId, setUserProfileId] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n    const [imageUrl, setImageUrl] = useState(\"\");\r\n    const [caption, setCaption] = useState(\"\");\r\n\r\n    const NewPost = (post) => {\r\n        return fetch('/api/post', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(post)\r\n        })\r\n            .then(res => res.json());\r\n    }\r\n\r\n    const submitPost = (event) => {\r\n        const post = {\r\n            title, imageUrl, caption, userProfileId,\r\n        };\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <Card>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"userId\">User Id</Label>\r\n                            <Input id=\"userId\" onChange={(e) => setUserProfileId(e.target.value)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"title\">Title</Label>\r\n                            <Input id=\"title\" onChange={(e) => setTitle(e.target.value)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"imageUrl\">URL</Label>\r\n                            <Input id=\"imageUrl\" onChange={(e) => setImageUrl(e.target.value)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"caption\">Caption</Label>\r\n                            <Input id=\"caption\" onChange={(e) => setCaption(e.target.value)} />\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button onClick={submitPost}>Create New Post</Button>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default PostForm;",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"39","severity":1,"message":"43","line":5,"column":12,"nodeType":"41","messageId":"42","endLine":5,"endColumn":17},{"ruleId":"39","severity":1,"message":"44","line":5,"column":19,"nodeType":"41","messageId":"42","endLine":5,"endColumn":27},{"ruleId":"39","severity":1,"message":"45","line":11,"column":11,"nodeType":"41","messageId":"42","endLine":11,"endColumn":18},{"ruleId":"39","severity":1,"message":"46","line":23,"column":15,"nodeType":"41","messageId":"42","endLine":23,"endColumn":19},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'event' is assigned a value but never used.","'setEvent' is assigned a value but never used.","'NewPost' is assigned a value but never used.","'post' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]