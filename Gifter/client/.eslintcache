[{"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\index.js":"1","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\reportWebVitals.js":"2","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\App.js":"3","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostList.js":"4","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostSearch.js":"5","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostProvider.js":"6","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostForm.js":"7","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\Post.js":"8","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\ApplicationViews.js":"9"},{"size":567,"mtime":1610641097819,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1610638345071,"results":"12","hashOfConfig":"11"},{"size":339,"mtime":1610652513017,"results":"13","hashOfConfig":"11"},{"size":1002,"mtime":1610652513025,"results":"14","hashOfConfig":"11"},{"size":715,"mtime":1610641097815,"results":"15","hashOfConfig":"11"},{"size":1615,"mtime":1610652513026,"results":"16","hashOfConfig":"11"},{"size":3071,"mtime":1610652513023,"results":"17","hashOfConfig":"11"},{"size":717,"mtime":1610652513022,"results":"18","hashOfConfig":"11"},{"size":1066,"mtime":1610652513019,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ablpqo",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\index.js",[],["41","42"],"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\reportWebVitals.js",[],"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\App.js",[],"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostList.js",["43","44"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { PostContext } from \"./PostProvider\";\r\nimport Post from \"./Post\";\r\n\r\nconst PostList = () => {\r\n    const { posts, getPosts, searchTerms, searchPosts } = useContext(PostContext);\r\n\r\n    useEffect(() => {\r\n        if (searchTerms !== \"\") {\r\n            searchPosts(searchTerms, true);\r\n        } else {\r\n            getPosts();\r\n        }\r\n    }, [searchTerms]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"cards-column\">\r\n                    {posts.map((post) => (\r\n                        <Post\r\n                            key={post.id}\r\n                            post={post}\r\n                            comments={post.comments}\r\n                            comments={post.comments}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostSearch.js",["45","46"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { PostContext } from \"./PostProvider\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nexport const PostSearch = () => {\r\n    const { setSearchTerms } = useContext(PostContext);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <Input\r\n                        type=\"text\"\r\n                        className=\"w-50\"\r\n                        onKeyUp={(event) => setSearchTerms(event.target.value)}\r\n                        placeholder=\"Search for an post... \"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};","C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostProvider.js",[],"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\PostForm.js",[],"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\Post.js",[],"C:\\Users\\stark\\workspace\\Gifter\\Gifter\\client\\src\\components\\ApplicationViews.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":14,"column":8,"nodeType":"53","endLine":14,"endColumn":21,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":25,"column":29,"nodeType":"57","endLine":25,"endColumn":53},{"ruleId":"58","severity":1,"message":"59","line":1,"column":29,"nodeType":"60","messageId":"61","endLine":1,"endColumn":38},{"ruleId":"58","severity":1,"message":"62","line":1,"column":40,"nodeType":"60","messageId":"61","endLine":1,"endColumn":48},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPosts' and 'searchPosts'. Either include them or remove the dependency array.","ArrayExpression",["65"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [getPosts, searchPosts, searchTerms]",{"range":"68","text":"69"},[408,421],"[getPosts, searchPosts, searchTerms]"]